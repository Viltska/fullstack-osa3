{"version":3,"sources":["services/personService.js","components/Person.js","components/Phonebook.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","console","log","axios","get","then","response","data","newObject","post","id","put","delete","Person","name","number","deletePerson","className","onClick","Phonebook","props","onSubmit","addPerson","value","newPerson","onChange","handlePersonChange","newNumber","handleNumberChange","type","Filter","currentFilter","handleFilterChange","Notification","message","includes","App","useState","persons","setPersons","setNewPerson","setNewNumber","setFilter","setMessage","useEffect","Service","initialPersons","personsToShow","filter","p","event","target","preventDefault","personObject","some","person","window","confirm","updatedPerson","find","returnedPerson","map","setTimeout","catch","error","length","concat","i","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83fbeebd.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n// const baseUrl = 'http://localhost:3001/api/persons'\r\nconst baseUrl = 'https://fullstack3-backend.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n    console.log('getAll called')\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    console.log('create called object:', newObject)\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    console.log('update called id:', id)\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    console.log('delete called id:', id)\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    remove\r\n}","import React from 'react'\r\n\r\nconst Person = ({ name, number, deletePerson }) => {\r\n\r\n    return (\r\n        <li className='person'>{name} {number}<button onClick={deletePerson}> Delete</button></li>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Phonebook = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Add a new person</h3>\r\n            <form onSubmit={props.addPerson}>\r\n                Name:\r\n        <input\r\n                    value={props.newPerson}\r\n                    onChange={props.handlePersonChange}\r\n                />\r\n                <br></br>\r\n        Number:\r\n        <input\r\n                    value={props.newNumber}\r\n                    onChange={props.handleNumberChange}\r\n                />\r\n                <br></br>\r\n                <button type=\"submit\">Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Phonebook","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            Filter:\r\n            <input\r\n                value={props.currentFilter}\r\n                onChange={props.handleFilterChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n\r\n    if (message === null) {\r\n        return null\r\n\r\n    } else if (message.includes('Error')) {\r\n        return (\r\n            <div className='error' >\r\n                {message}\r\n            </div>\r\n        )\r\n\r\n    } else {\r\n        return (\r\n            <div className='notification'>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport Service from './services/personService'\nimport Person from './components/Person'\nimport Phonebook from './components/Phonebook'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\n\n\n// Phonebook\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newPerson, setNewPerson] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [currentFilter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n\n  // Get All\n  const hook = () => {\n    Service\n      .getAll()\n      .then(initialPersons => {\n        console.log('Persons from db:', initialPersons)\n        setPersons(initialPersons)\n      })\n  }\n  useEffect(hook, [])\n\n  // Add\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newPerson,\n      number: newNumber,\n\n    }\n\n    if (!persons.some(person => person.name === personObject.name)) {\n      if (personObject.name.length > 0) {\n        console.log('New person object: ', personObject)\n        Service\n          .create(personObject)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n          })\n          .then(() => {\n            setMessage(`Added ${personObject.name} to phonebook`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 2000)\n          }).catch(error => {\n            console.log(\"api Error:\", error.response.data.error)\n            setMessage(`Error: ${error.response.data.error}`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 2000)\n          })\n      } else {\n        console.log('Name field was empty.')\n      }\n\n      // Update number\n    } else {\n      if (window.confirm(`Update number for ${personObject.name} ?`)) {\n        const updatedPerson = persons.find(person => person.name === personObject.name)\n        console.log('updating number for ', updatedPerson)\n        Service.update(updatedPerson.id, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => p.id !== returnedPerson.id ? p : returnedPerson))\n          })\n          .then(() => {\n            setMessage(`Updated number for ${updatedPerson.name}`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 2000)\n          })\n          .catch(error => {\n            console.log(\"api Error:\", error.response.data.error)\n            setMessage(`Error: ${error.response.data.error}`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 2000)\n          })\n      }\n    }\n  }\n  // Delete\n  const deletePerson = id => {\n\n    const person = persons.find(p => p.id === id)\n    // Confirm window\n    if (window.confirm(`Do you want to remove ${person.name} ?`)) {\n      console.log('person:', person)\n      Service.remove(person.id)\n        .then(\n          setPersons(persons.filter(p => p.id !== person.id)),\n        )\n        .then(() => {\n          setMessage(`${person.name} was deleted from phonebook`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 2000)\n        })\n        .catch(error => {\n          console.log(\"api Error:\", error.response.data.error)\n          setMessage(`Error: ${error.response.data.error}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 2000)\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n      console.log('filter person: ', person)\n    }\n  }\n\n\n  const handlePersonChange = (event) => {\n    setNewPerson(event.target.value)\n\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n\n  }\n\n  const personsToShow = persons.filter(p => p.name.includes(currentFilter))\n\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} />\n      <Filter currentFilter={currentFilter} handleFilterChange={handleFilterChange} personsToShow={personsToShow} />\n      <Phonebook addPerson={addPerson} setNewNumber={setNewNumber} handlePersonChange={handlePersonChange} handleNumberChange={handleNumberChange} />\n      <br></br>\n      <h1>Persons, {personsToShow.length} found</h1>\n      <ul>\n        {personsToShow.map((person, i) =>\n          <Person\n            key={i}\n            name={person.name}\n            number={person.number}\n            deletePerson={() => deletePerson(person.id)} />\n        )}\n      </ul>\n    </div >\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}